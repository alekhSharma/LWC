<apex:page showHeader="false">
    <html>
        <head>
            <link rel="stylesheet" href="https://developers.google.com/maps/documentation/javascript/demos/demos.css"/>
        </head>
        <body>
            
            <div id="map"></div>
            <div id="demo"></div>
            <script>
            var y;
            var myLatlng;
            var map;
            var i;
            var waypoints=[];
            function getLocation() {//to get user's current location 
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);//calls showPosition function
                    
                } else {
                    x.innerHTML = "Geolocation is not supported by this browser.";
                }
            }
            function showPosition(position) {
                y = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                initMap();
            }
            
            var lexOrigin = 'https://{!$CurrentPage.parameters.lcHost}';
            //Function to send message to Lightning Component
            function sendToLC(message) {
                if(typeof(lexOrigin) != 'undefined'){
                    parent.window.postMessage(message, lexOrigin);
                }
            }
            
            
            
            //Receive message from Lightning Component
            window.addEventListener("message", function(event) {
                //If page is public (like used in force.com sites) then be careful about the origin
                if (event.origin !== lexOrigin) {
                    //Not the expected origin: reject message!
                    return;
                }
                // Handle message
                data = event.data;
                
                if(typeof(event.data.loadGoogleMap) != 'undefined'){
                    //Load Google Map Script
                    var script = document.createElement("script");
                    script.src =
                        "https://maps.googleapis.com/maps/api/js?key="+data.customLabelValue+"&callback=getLocation";
                    //getLocation() called after google map script api is loaded
                    script.async = true;
                    document.getElementsByTagName("head")[0].appendChild(script);  
                }
            }, false);
            
            function addMarker(feature) {//add marker to the location coordinates
                var marker = new google.maps.Marker({
                    position: feature.position,
                    map: map,
                    icon: 'https://maps.google.com/mapfiles/ms/icons/'+feature.color+'-dot.png'
                });
                var infoWindow = new google.maps.InfoWindow({
                    content: feature.markerText
                });
                
                marker.addListener('click', function() {
                    infoWindow.open(map, marker);
                });
            }
            
            
            function initMap() {
                //create the map
                 map = new google.maps.Map(document.getElementById("map"), JSON.parse(data.mapOptions));
                map.setCenter(y);
                var mapData = data.mapData;
                for(i=0;i<mapData.length;i++){
                 myLatlng = new google.maps.LatLng(mapData[i].lat, mapData[i].lng);
                 //add marker for the particular location
                 addMarker({position: myLatlng, markerText: mapData[i].markerText, color:"red"});
                //add element to the waypoint array to be used in route calculation
                waypoints[i]={location:myLatlng,stopover:true};
                }
                
               addMarker({position: y, markerText: "This is your current location", color:"green"});
                
               calcRoute(y,waypoints);
                
            }
           
            function calcRoute(center,waypoints) {
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer({
                suppressMarkers: true
                });
                directionsDisplay.setMap(map);
                
                var request = {
                    origin: center,
                    destination: center,
                    waypoints: waypoints,
                    optimizeWaypoints: true,
                    travelMode: 'DRIVING'
                };
                directionsService.route(request, function(result, status) {
                    if (status === 'OK') {
                        directionsDisplay.setDirections(result);
                        
                    }
                    else{
                        //you can put an alert here mentioning error
                    }
                });
                
            }
            //LC= Lightning Component
            //Let LC know that VF page been loaded along with it's URL
            //LC will then send the data
            //This is done because LC has no way to know that VF page in iFrame has been loaded, 
            //event listener set and ready for data
            var vfHost = "{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}";
            sendToLC({'state':'LOADED', 'vfHost': vfHost});
            </script>      
        </body>
    </html>
</apex:page>